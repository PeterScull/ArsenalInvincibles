version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.11.2
  install_awscli:
    description: Install AWS CLI
    steps:
      - run:
          name: Install AWS CLI v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install

  install_nodejs:
    description: Install Node.js 13
    steps:
      - run:
          name: Install Node.js 13
          command: |
            curl -fsSL https://deb.nodesource.com/setup_13.x | sudo -E bash -
            apt install -y nodejs

  create-eks-cluster:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run:
          name: install tar & gzip
          command: |
            apk add --update tar gzip nodejs npm curl
      - install_awscli
      - install_aws_eks
      - install_kubectl
      - run:
          name: Create AWS EKS cluster
          command: |
            eksctl create cluster --name ArsenalInvincibles --region us-east-1 --zones us-east-1a,us-east-1b,us-east-1c,us-east-1d
            eksctl utils describe-stacks --region us-east-1 --cluster=ArsenalInvincibles
            eksctl get cluster --name=ArsenalInvinvicibles --region=us-east-1

  test-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: |
          EKS cluster name
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: <<parameters.cluster-name >>
      - run:
          name: kube cluster
          command: |
            kubectl get services

  deploy-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstone
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: ${AWS_DEFAULT_REGION}
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deploy.yml
          resource-name: deployment/capstone

workflows:
  default:
    jobs:
      - build
      - build_pushImage:
          requires:
            - build
      - create-eks-cluster:
          requires:
            - build_pushImage
      - test-cluster:
          cluster-name: capstone
          requires:
            - create-eks-cluster
      - deploy-cluster:
          cluster-name: capstone
          requires:
            - test-cluster
